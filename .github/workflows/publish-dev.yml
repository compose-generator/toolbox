# Publish Dev
name: Publish Dev

on:
  push:
    branches: [ main, dev ]
    paths:
      - './amd64/Dockerfile'
      - './i386/Dockerfile'
      - './armv6/Dockerfile'
      - './armv7/Dockerfile'
      - './arm64/Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - {
              name: amd64,
              docker-arch: linux/amd64
            }
          - {
              name: i386,
              docker-arch: linux/i386
            }
          - {
              name: armv6,
              docker-arch: linux/arm/v6
            }
          - {
              name: armv7,
              docker-arch: linux/arm/v7
            }
          - {
              name: arm64,
              docker-arch: linux/arm64/v8
            }
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker login Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: chillibits
          password: ${{ secrets.DOCKER_HUB_SECRET }}
          
      - name: Build Docker image and push to registries
        working-directory: ./${{ matrix.arch.name }}
        run: |
          docker buildx build --push --platform ${{ matrix.arch.docker-arch }} \
            -t ghcr.io/compose-generator/compose-generator-toolbox:${{ matrix.arch.name }}-dev \
            -t chillibits/compose-generator-toolbox:${{ matrix.arch.name }}-dev .

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Docker login Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: chillibits
          password: ${{ secrets.DOCKER_HUB_SECRET }}

      - name: Build manifest Docker Hub
        run: |
          docker manifest create chillibits/compose-generator-toolbox:dev \
            chillibits/compose-generator-toolbox:amd64-dev \
            chillibits/compose-generator-toolbox:i386-dev \
            chillibits/compose-generator-toolbox:armv6-dev \
            chillibits/compose-generator-toolbox:armv7-dev \
            chillibits/compose-generator-toolbox:arm64-dev
          docker manifest push chillibits/compose-generator-toolbox:dev